name: Update a file with the new Kubernetes version

on:
  workflow_call:
    inputs:
      repository:
        description: "Repository to update format: owner/repo"
        required: true
        type: string
      branch:
        description: "Branch to update e.g. main, master, dev"
        required: true
        default: main
        type: string
      file:
        description: "Path to the file to update eg. ./k8s/deployment.yaml"
        required: true
        type: string
      version:
        description: "New version to update the file with"
        required: true
        type: string
      image:
        description: "Image name to update the file with"
        required: true
        type: string
      username:
        description: "GitHub username"
        required: true
        type: string
    secrets:
      PRIVATE_REPO_KEY:
        description: "Personal Access Token for private repo access"
        required: true

env:
  REGISTRY: ghcr.io

jobs:
  image:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ inputs.image }}
      VERSION: ${{ inputs.version }}
      FILE: ${{ inputs.file }}
      BRANCH: ${{ inputs.branch }}
    permissions:
      contents: write

    steps:
      - name: Checkout private repository using PAT
        run: |
          git clone https://${{ inputs.username }}:${{ secrets.PRIVATE_REPO_KEY }}@github.com/${{ inputs.repository }}.git repo

      - name: Check if new version is different
        id: check_version
        run: |
          cd repo
          echo "Checking current version in file: ${FILE}"
          CURRENT_VERSION=$(grep -oP '(?<=image: ghcr.io/${IMAGE_NAME}:)[^\s"]+' ${FILE})
          echo "Current version found: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_ENV
          if [ "$CURRENT_VERSION" = "${VERSION}" ]; then
            echo "The new version is the same as the current version. Exiting..."
            exit 0
          fi

      - name: Update Kubernetes deployment file
        if: env.current_version != inputs.version
        run: |
          cd repo
          sed -i "s|ghcr.io/${IMAGE_NAME}:[^\"]*|ghcr.io/${IMAGE_NAME}:${VERSION}|" ${FILE}
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add ${FILE}
          git commit -m "Update deployment image version to ${VERSION} [skip ci]"
          git push origin HEAD:${BRANCH}
